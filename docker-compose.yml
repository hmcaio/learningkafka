---
  version: '3.9'
  services:
    zookeeper:
      image: confluentinc/cp-zookeeper:latest
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
      healthcheck:
        test: ["CMD-SHELL", "cub zk-ready localhost:2181 15"]
        start_period: 15s
        retries: 3
        interval: 15s
        timeout: 20s
      networks:
        - learningkafka
  
    kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        zookeeper:
          condition: service_healthy
      healthcheck:
        test: ["CMD-SHELL", "cub kafka-ready -b localhost:29092 1 15"]
        start_period: 15s
        retries: 3
        interval: 15s
        timeout: 20s
      ports:
        - 9092:9092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      networks:
        - learningkafka

    kafka-setup:
      image: confluentinc/cp-kafka:latest
      depends_on:
        kafka:
          condition: service_healthy
      command: "bash -c 'echo Creating topic && \
                         kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic cookie-topic && \
                         echo Done.'"
      environment:
        KAFKA_BROKER_ID: ignored
        KAFKA_ZOOKEEPER_CONNECT: ignored
      networks:
        - learningkafka

    cookie-producer:
      image: cookie-producer
      build: ./cookie-provider-service
      depends_on:
        kafka-setup:
          condition: service_completed_successfully
      ports:
        - 8080:8080
      networks:
        - learningkafka
    
    cookie-consumer:
      image: cookie-consumer
      build: ./cookie-consumer-service
      depends_on:
        kafka-setup:
          condition: service_completed_successfully
      networks:
        - learningkafka

  networks:
    learningkafka:
